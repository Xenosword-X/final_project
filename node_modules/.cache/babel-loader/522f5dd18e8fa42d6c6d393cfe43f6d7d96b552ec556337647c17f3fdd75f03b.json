{"ast":null,"code":"import DelModal from '@/components/DelModal.vue';\nimport OrderModal from '@/components/OrderModal.vue';\nimport Pagination from '@/components/Pagination.vue';\nexport default {\n  data() {\n    return {\n      orders: [],\n      pagination: {},\n      isLoading: false,\n      tempOrder: {}\n    };\n  },\n  components: {\n    DelModal,\n    OrderModal,\n    Pagination\n  },\n  methods: {\n    getOrders(page = 1) {\n      const api = `${process.env.VUE_APP_API}api/${process.env.VUE_APP_PATH}/admin/orders?page=${page}`;\n      this.isLoading = true;\n      this.$http.get(api).then(res => {\n        if (res.data.success) {\n          this.isLoading = false;\n          this.orders = res.data.orders;\n          this.pagination = res.data.pagination;\n        }\n      });\n    },\n    openModal(item) {\n      this.tempOrder = {\n        ...item\n      };\n      const orderComponent = this.$refs.orderModal;\n      orderComponent.showModal();\n    },\n    openDelOrderModal(item) {\n      this.tempProduct = {\n        ...item\n      };\n      const delComponent = this.$refs.delModal;\n      delComponent.showModal();\n    },\n    updatePaid(item) {\n      this.isLoading = true;\n      const api = `${process.env.VUE_APP_API}api/${process.env.VUE_APP_PATH}/admin/order/${item.id}`;\n      const paid = {\n        is_paid: item.is_paid\n      };\n      this.$http.put(api, {\n        data: paid\n      }).then(res => {\n        this.isLoading = false;\n        this.getOrders();\n      });\n    },\n    delOrder() {\n      const api = `${process.env.VUE_APP_API}api/${process.env.VUE_APP_PATH}/admin/order/${this.tempOrder.id}`;\n      this.$http.delete(api).then(res => {\n        const delComponent = this.$refs.delModal;\n        delComponent.hideModal();\n        this.getOrders();\n      });\n    },\n    formatDate(timestamp) {\n      const num = Number(timestamp);\n      if (!num || isNaN(num)) {\n        return '無效時間';\n      }\n      const date = new Date(num * 1000);\n      return date.toISOString().split('T')[0];\n    }\n  },\n  created() {\n    this.getOrders();\n  }\n};","map":{"version":3,"names":["DelModal","OrderModal","Pagination","data","orders","pagination","isLoading","tempOrder","components","methods","getOrders","page","api","process","env","VUE_APP_API","VUE_APP_PATH","$http","get","then","res","success","openModal","item","orderComponent","$refs","orderModal","showModal","openDelOrderModal","tempProduct","delComponent","delModal","updatePaid","id","paid","is_paid","put","delOrder","delete","hideModal","formatDate","timestamp","num","Number","isNaN","date","Date","toISOString","split","created"],"sources":["C:\\Users\\User\\Documents\\GitHub\\final_project\\src\\views\\Orders.vue"],"sourcesContent":["<!-- eslint-disable vue/multi-word-component-names -->\r\n<template>\r\n  <Loading :active=\"isLoading\" />\r\n\r\n  <h2 class=\"h4 fw-bold mt-4 mb-3\">訂單管理</h2>\r\n\r\n  <div class=\"table-responsive\">\r\n    <table class=\"table table-hover align-middle text-nowrap\">\r\n      <thead class=\"table-light\">\r\n        <tr>\r\n          <th>購買時間</th>\r\n          <th>Email</th>\r\n          <th>購買項目</th>\r\n          <th class=\"text-end\">應付金額</th>\r\n          <th class=\"text-center\">付款狀態</th>\r\n          <th class=\"text-center\">操作</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody v-if=\"orders.length\">\r\n        <tr v-for=\"(item, key) in orders\" :key=\"key\" :class=\"{ 'text-muted': !item.is_paid }\">\r\n          <td>{{ formatDate(item.create_at) }}</td>\r\n          <td>{{ item.user?.email || '無資料' }}</td>\r\n          <td>\r\n            <ul class=\"list-unstyled mb-0\">\r\n              <li v-for=\"(product, i) in item.products\" :key=\"i\">\r\n                {{ product.product.title }} × {{ product.qty }} {{ product.product.unit }}\r\n              </li>\r\n            </ul>\r\n          </td>\r\n          <td class=\"text-end\">{{ $filters.currency(item.total) }}</td>\r\n          <td class=\"text-center\">\r\n            <div class=\"d-flex flex-column align-items-center\">\r\n              <span\r\n                class=\"badge mb-1\"\r\n                :class=\"item.is_paid ? 'bg-success' : 'bg-secondary'\">\r\n                {{ item.is_paid ? '已付款' : '未付款' }}\r\n              </span>\r\n              <div class=\"form-check form-switch\">\r\n                <input\r\n                  class=\"form-check-input\"\r\n                  type=\"checkbox\"\r\n                  :id=\"`paidSwitch${item.id}`\"\r\n                  v-model=\"item.is_paid\"\r\n                  @change=\"updatePaid(item)\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </td>\r\n          <td class=\"text-center\">\r\n            <div class=\"btn-group\">\r\n              <button class=\"btn btn-outline-primary btn-sm\" @click=\"openModal(item)\">\r\n                <i class=\"bi bi-eye\"></i> 檢視\r\n              </button>\r\n              <button class=\"btn btn-outline-danger btn-sm\" @click=\"openDelOrderModal(item)\">\r\n                <i class=\"bi bi-trash\"></i> 刪除\r\n              </button>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n\r\n  <OrderModal :order=\"tempOrder\" ref=\"orderModal\" @update-paid=\"updatePaid\"/>\r\n  <DelModal :item=\"tempOrder\" ref=\"delModal\" @del-item=\"delOrder\"/>\r\n  <Pagination :pages=\"pagination\" @emit-pages=\"getOrders\"/>\r\n</template>\r\n\r\n<script>\r\nimport DelModal from '@/components/DelModal.vue'\r\nimport OrderModal from '@/components/OrderModal.vue'\r\nimport Pagination from '@/components/Pagination.vue'\r\nexport default {\r\n  data () {\r\n    return {\r\n      orders: [],\r\n      pagination: {},\r\n      isLoading: false,\r\n      tempOrder: {}\r\n    }\r\n  },\r\n  components: {\r\n    DelModal,\r\n    OrderModal,\r\n    Pagination\r\n  },\r\n  methods: {\r\n    getOrders (page = 1) {\r\n      const api = `${process.env.VUE_APP_API}api/${process.env.VUE_APP_PATH}/admin/orders?page=${page}`\r\n      this.isLoading = true\r\n      this.$http.get(api)\r\n        .then(res => {\r\n          if (res.data.success) {\r\n            this.isLoading = false\r\n            this.orders = res.data.orders\r\n            this.pagination = res.data.pagination\r\n          }\r\n        })\r\n    },\r\n    openModal (item) {\r\n      this.tempOrder = { ...item }\r\n      const orderComponent = this.$refs.orderModal\r\n      orderComponent.showModal()\r\n    },\r\n    openDelOrderModal (item) {\r\n      this.tempProduct = { ...item }\r\n      const delComponent = this.$refs.delModal\r\n      delComponent.showModal()\r\n    },\r\n    updatePaid (item) {\r\n      this.isLoading = true\r\n      const api = `${process.env.VUE_APP_API}api/${process.env.VUE_APP_PATH}/admin/order/${item.id}`\r\n      const paid = {\r\n        is_paid: item.is_paid\r\n      }\r\n      this.$http.put(api, { data: paid })\r\n        .then(res => {\r\n          this.isLoading = false\r\n          this.getOrders()\r\n        })\r\n    },\r\n    delOrder () {\r\n      const api = `${process.env.VUE_APP_API}api/${process.env.VUE_APP_PATH}/admin/order/${this.tempOrder.id}`\r\n      this.$http.delete(api)\r\n        .then(res => {\r\n          const delComponent = this.$refs.delModal\r\n          delComponent.hideModal()\r\n          this.getOrders()\r\n        })\r\n    },\r\n    formatDate (timestamp) {\r\n      const num = Number(timestamp)\r\n      if (!num || isNaN(num)) {\r\n        return '無效時間'\r\n      }\r\n      const date = new Date(num * 1000)\r\n      return date.toISOString().split('T')[0]\r\n    }\r\n  },\r\n  created () {\r\n    this.getOrders()\r\n  }\r\n}\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}