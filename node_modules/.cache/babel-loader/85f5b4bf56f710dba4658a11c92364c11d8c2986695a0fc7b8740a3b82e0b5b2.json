{"ast":null,"code":"import ProductModal from '@/components/ProductModal.vue';\nimport DelModal from '@/components/DelModal.vue';\nimport Pagination from '@/components/Pagination.vue';\nimport ToastMessage from '@/mixins/ToastMessage';\nexport default {\n  data() {\n    return {\n      products: [],\n      pagination: {},\n      tempProduct: {},\n      isNew: false,\n      /* 判斷資料是否為新增型態，預設為否 */\n      isLoading: false /* 判斷網頁是否為讀取中，預設為否 */\n    };\n  },\n  components: {\n    // eslint-disable-next-line vue/no-unused-components\n    ProductModal,\n    DelModal,\n    Pagination\n  },\n  methods: {\n    getProducts(page = 1) {\n      const api = `${process.env.VUE_APP_API}api/${process.env.VUE_APP_PATH}/admin/products?page=${page}`;\n      this.isLoading = true; /* 讀取時顯示Loading效果 */\n      this.$http.get(api).then(res => {\n        if (res.data.success) {\n          this.isLoading = false; /* 讀取完畢時關閉Loading效果 */\n          console.log(res.data);\n          this.products = res.data.products;\n          this.pagination = res.data.pagination;\n        }\n      });\n    },\n    openModal(isNew, item) {\n      if (isNew) {\n        this.tempProduct = {};\n      } else {\n        this.tempProduct = {\n          ...item\n        };\n      }\n      this.isNew = isNew;\n      const productComponent = this.$refs.productModal;\n      productComponent.showModal();\n    },\n    updateProduct(item) {\n      this.tempProduct = item;\n      /* 新增狀態 */\n      let api = `${process.env.VUE_APP_API}api/${process.env.VUE_APP_PATH}/admin/product`;\n      let httpMethod = 'post';\n      /* 編輯狀態 */\n      if (!this.isNew) {\n        api = `${process.env.VUE_APP_API}api/${process.env.VUE_APP_PATH}/admin/product/${item.id}`;\n        httpMethod = 'put';\n      }\n      const productComponent = this.$refs.productModal;\n      this.$http[httpMethod](api, {\n        data: this.tempProduct\n      }).then(res => {\n        console.log(res);\n        productComponent.hideModal();\n        if (res.data.success) {\n          this.getProducts();\n          this.showToast('success', '更新成功');\n        } else {\n          this.showToast('error', '更新失敗，請確認是否有欄位未填寫');\n        }\n      }).catch(err => {\n        this.showToast('error', '更新失敗，請確認是否有欄位未填寫');\n        console.error('更新錯誤：', err);\n      });\n    },\n    // 開啟刪除 ModalAdd commentMore actions\n    openDelProductModal(item) {\n      this.tempProduct = {\n        ...item\n      };\n      const delComponent = this.$refs.delModal;\n      delComponent.showModal();\n    },\n    delProduct() {\n      const url = `${process.env.VUE_APP_API}api/${process.env.VUE_APP_PATH}/admin/product/${this.tempProduct.id}`;\n      this.$http.delete(url).then(response => {\n        console.log(response.data);\n        const delComponent = this.$refs.delModal;\n        delComponent.hideModal();\n        this.getProducts();\n      });\n    }\n  },\n  created() {\n    this.getProducts();\n  },\n  mixins: [ToastMessage]\n};","map":{"version":3,"names":["ProductModal","DelModal","Pagination","ToastMessage","data","products","pagination","tempProduct","isNew","isLoading","components","methods","getProducts","page","api","process","env","VUE_APP_API","VUE_APP_PATH","$http","get","then","res","success","console","log","openModal","item","productComponent","$refs","productModal","showModal","updateProduct","httpMethod","id","hideModal","showToast","catch","err","error","openDelProductModal","delComponent","delModal","delProduct","url","delete","response","created","mixins"],"sources":["C:\\Users\\User\\Documents\\GitHub\\final_project\\src\\views\\Products.vue"],"sourcesContent":["<!-- eslint-disable vue/multi-word-component-names -->\r\n<template>\r\n  <Loading :active=\"isLoading\" />\r\n  <div class=\"d-flex justify-content-between align-items-center my-4\">\r\n    <h2 class=\"h4 fw-bold mb-0\">產品管理</h2>\r\n    <button class=\"btn btn-primary d-flex align-items-center gap-1\" @click=\"openModal(true)\">\r\n      <i class=\"bi bi-plus-circle\"></i> 增加產品\r\n    </button>\r\n  </div>\r\n  <div class=\"table-responsive\">\r\n    <table class=\"table table-hover align-middle text-nowrap\">\r\n      <thead class=\"table-light\">\r\n        <tr>\r\n          <th width=\"120\">分類</th>\r\n          <th>產品名稱</th>\r\n          <th width=\"120\" class=\"text-start\">原價</th>\r\n          <th width=\"120\" class=\"text-start\">售價</th>\r\n          <th width=\"100\" class=\"text-center\">狀態</th>\r\n          <th width=\"200\" class=\"text-center\">操作</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"item in products\" :key=\"item.id\">\r\n          <td>{{ item.category }}</td>\r\n          <td>{{ item.title }}</td>\r\n          <td class=\"text-start\">{{ $filters.currency(item.origin_price) }}</td>\r\n          <td class=\"text-start\">{{ $filters.currency(item.price) }}</td>\r\n          <td class=\"text-center\">\r\n            <span class=\"badge\" :class=\"item.is_enabled ? 'bg-success' : 'bg-secondary'\">\r\n              {{ item.is_enabled ? '啟用' : '未啟用' }}\r\n            </span>\r\n          </td>\r\n          <td class=\"text-center\">\r\n            <div class=\"btn-group\">\r\n              <button class=\"btn btn-outline-primary btn-sm\" @click=\"openModal(false, item)\">\r\n                <i class=\"bi bi-pencil-square\"></i> 編輯\r\n              </button>\r\n              <button class=\"btn btn-outline-danger btn-sm\" @click=\"openDelProductModal(item)\">\r\n                <i class=\"bi bi-trash\"></i> 刪除\r\n              </button>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n  <pagination :pages=\"pagination\" @emit-pages=\"getProducts\" />\r\n  <ProductModal ref=\"productModal\" :product=\"tempProduct\" :isNew=\"isNew\"\r\n    @update-product=\"updateProduct\"\r\n  />\r\n  <DelModal :item=\"tempProduct\" ref=\"delModal\" @del-item=\"delProduct\"/>\r\n</template>\r\n\r\n<script>\r\nimport ProductModal from '@/components/ProductModal.vue'\r\nimport DelModal from '@/components/DelModal.vue'\r\nimport Pagination from '@/components/Pagination.vue'\r\nimport ToastMessage from '@/mixins/ToastMessage'\r\nexport default {\r\n  data () {\r\n    return {\r\n      products: [],\r\n      pagination: {},\r\n      tempProduct: {},\r\n      isNew: false, /* 判斷資料是否為新增型態，預設為否 */\r\n      isLoading: false /* 判斷網頁是否為讀取中，預設為否 */\r\n    }\r\n  },\r\n  components: {\r\n    // eslint-disable-next-line vue/no-unused-components\r\n    ProductModal,\r\n    DelModal,\r\n    Pagination\r\n  },\r\n  methods: {\r\n    getProducts (page = 1) {\r\n      const api = `${process.env.VUE_APP_API}api/${process.env.VUE_APP_PATH}/admin/products?page=${page}`\r\n      this.isLoading = true /* 讀取時顯示Loading效果 */\r\n      this.$http.get(api).then(res => {\r\n        if (res.data.success) {\r\n          this.isLoading = false /* 讀取完畢時關閉Loading效果 */\r\n          console.log(res.data)\r\n          this.products = res.data.products\r\n          this.pagination = res.data.pagination\r\n        }\r\n      })\r\n    },\r\n    openModal (isNew, item) {\r\n      if (isNew) {\r\n        this.tempProduct = {}\r\n      } else {\r\n        this.tempProduct = { ...item }\r\n      }\r\n      this.isNew = isNew\r\n      const productComponent = this.$refs.productModal\r\n      productComponent.showModal()\r\n    },\r\n    updateProduct (item) {\r\n      this.tempProduct = item\r\n      /* 新增狀態 */\r\n      let api = `${process.env.VUE_APP_API}api/${process.env.VUE_APP_PATH}/admin/product`\r\n      let httpMethod = 'post'\r\n      /* 編輯狀態 */\r\n      if (!this.isNew) {\r\n        api = `${process.env.VUE_APP_API}api/${process.env.VUE_APP_PATH}/admin/product/${item.id}`\r\n        httpMethod = 'put'\r\n      }\r\n      const productComponent = this.$refs.productModal\r\n      this.$http[httpMethod](api, { data: this.tempProduct })\r\n        .then((res) => {\r\n          console.log(res)\r\n          productComponent.hideModal()\r\n          if (res.data.success) {\r\n            this.getProducts()\r\n            this.showToast('success', '更新成功')\r\n          } else {\r\n            this.showToast('error', '更新失敗，請確認是否有欄位未填寫')\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          this.showToast('error', '更新失敗，請確認是否有欄位未填寫')\r\n          console.error('更新錯誤：', err)\r\n        })\r\n    },\r\n    // 開啟刪除 ModalAdd commentMore actions\r\n    openDelProductModal (item) {\r\n      this.tempProduct = { ...item }\r\n      const delComponent = this.$refs.delModal\r\n      delComponent.showModal()\r\n    },\r\n    delProduct () {\r\n      const url = `${process.env.VUE_APP_API}api/${process.env.VUE_APP_PATH}/admin/product/${this.tempProduct.id}`\r\n      this.$http.delete(url).then((response) => {\r\n        console.log(response.data)\r\n        const delComponent = this.$refs.delModal\r\n        delComponent.hideModal()\r\n        this.getProducts()\r\n      })\r\n    }\r\n  },\r\n  created () {\r\n    this.getProducts()\r\n  },\r\n  mixins: [ToastMessage]\r\n}\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}